datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "prisma"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

model Site {
  id         String     @id @default(uuid()) @map("_id")
  name       String
  userId     String
  pages      Page[]     @relation("SiteToPage")
  music      Music[]    @relation("SiteToMusic")
  images     Image[]    @relation("SiteToImage")
  chat       Chat[]     @relation("SiteToChat")
  blog       Blog[]     @relation("SiteToBlog")
  videos     Video[]    @relation("SiteToVideo")
  categories Category[] @relation("SiteToCategory")
  products   Product[]  @relation("SiteToProduct")
  orders     Order[]    @relation("SiteToOrder")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Conversation {
  id        String    @id @default(cuid())
  userId    String
  title     String
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id             String       @id @default(cuid())
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  role           String
  content        String
  createdAt      DateTime     @default(now())

  @@index([conversationId])
}

model Profile {
  id         String   @id @default(uuid()) @map("_id")
  first_name String
  last_name  String
  email      String
  userId     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Chat {
  id        String   @id @default(uuid())
  siteId    String
  site      Site     @relation("SiteToChat", fields: [siteId], references: [id])
  label     String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([siteId])
}

model Music {
  id        String   @id @default(uuid())
  siteId    String
  site      Site     @relation("SiteToMusic", fields: [siteId], references: [id])
  label     String
  title     String
  songUrl   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([siteId])
}

model Image {
  id         String     @id @default(uuid())
  siteId     String
  site       Site       @relation("SiteToImage", fields: [siteId], references: [id])
  label      String
  imageUrl   String
  categories Category[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@index([siteId])
}

model Blog {
  id        String   @id @default(uuid())
  siteId    String
  site      Site     @relation("SiteToBlog", fields: [siteId], references: [id])
  label     String
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([siteId])
}

model Page {
  id        String   @id @default(uuid())
  siteId    String
  site      Site     @relation("SiteToPage", fields: [siteId], references: [id])
  label     String
  title     String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([siteId])
}

model Video {
  id        String   @id @default(uuid())
  siteId    String
  site      Site     @relation("SiteToVideo", fields: [siteId], references: [id])
  label     String
  title     String
  videoUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([siteId])
}

model Category {
  id        String    @id @default(uuid())
  siteId    String
  site      Site      @relation("SiteToCategory", fields: [siteId], references: [id])
  imageId   String
  image     Image     @relation(fields: [imageId], references: [id])
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[] @relation("CategoryToProduct")

  @@index([siteId])
  @@index([imageId])
}

model Product {
  id            String         @id @default(uuid()) @map("_id")
  siteId        String
  site          Site           @relation("SiteToProduct", fields: [siteId], references: [id])
  categoryId    String
  category      Category       @relation("CategoryToProduct", fields: [categoryId], references: [id])
  name          String
  price         Float // This was Decimal in mysql
  isFeatured    Boolean        @default(false)
  isArchived    Boolean        @default(false)
  productImages ProductImage[]
  orderItems    OrderItem[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@index([siteId])
  @@index([categoryId])
}

model OrderItem {
  id        String  @id @default(uuid()) @map("_id")
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@index([orderId])
  @@index([productId])
}

model Order {
  id         String      @id @default(uuid()) @map("_id")
  siteId     String
  site       Site        @relation("SiteToOrder", fields: [siteId], references: [id])
  orderItems OrderItem[]
  isPaid     Boolean     @default(false)
  phone      String      @default("")
  address    String      @default("")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@index([siteId])
}

model ProductImage {
  id        String   @id @default(uuid()) @map("_id")
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}
